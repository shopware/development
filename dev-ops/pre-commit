#!/usr/bin/env bash

PLATFORM_ROOT="$(git rev-parse --show-toplevel)"
PROJECT_ROOT="${PROJECT_ROOT:-"$(cd "$PLATFORM_ROOT"/.. && git rev-parse --show-toplevel)"}"
AUTOLOAD_FILE="$PROJECT_ROOT/dev-ops/analyze/vendor/autoload.php"

function onExit {
    if [[ $? != 0 ]]
    then
        echo "Fix the error before commit."
    fi
}
trap onExit EXIT

PHP_FILES="$(git diff --cached --name-only --diff-filter=ACMR HEAD | grep -E '^src/.*\.(php)$')"
SCSS_FILES="$(git diff --cached --name-only --diff-filter=ACMR HEAD | grep -E '\.(scss)$')"
SCSS_ADMIN_FILES="$(git diff --cached --name-only --diff-filter=ACMR HEAD | grep -E '^src/Administration/Resources/app/administration/.*\.(scss)$')"
JS_ADMIN_FILES="$(git diff --cached --name-only --diff-filter=ACMR HEAD | grep -E '^src/Administration/Resources/app/administration/.*\.(js)$')"
JS_E2E_FILES="$(git diff --cached --name-only --diff-filter=ACMR HEAD | grep -E '^src/Administration/Resources/app/administration/test/e2e/.*\.(js)$')"
JS_STOREFRONT_FILES="$(git diff --cached --name-only --diff-filter=ACMR HEAD | grep -E '^src/Storefront/Resources/app/storefront/src/script/.*\.(js)$')"
JS_FILES="$(git diff --cached --name-only --diff-filter=ACMR HEAD | grep -E '\.(js)$')"

# exit on non-zero return code
set -e

php ${PROJECT_ROOT}/dev-ops/analyze/generate-composer.php

if [[ -z "$PHP_FILES" && -z "$JS_FILES" && -z "$SCSS_FILES" ]]
then
    exit 0
fi

UNSTAGED_FILES="$(git diff --name-only -- ${PHP_FILES} ${JS_FILES} ${SCSS_FILES})"

if [[ -n "$UNSTAGED_FILES" ]]
then
    echo "Error: There are staged files with unstaged changes. We cannot automatically fix and add those.

Please add or revert the following files:

$UNSTAGED_FILES
"
    exit 1
fi

if [[ -n "$PHP_FILES" ]]
then
    cd ${PROJECT_ROOT}

    echo "Linting"
    PHP_FILES_ARRAY=(${PHP_FILES});
    for i in "${!PHP_FILES_ARRAY[@]}"; do
        PHP_FILES_ARRAY[$i]="platform/"${PHP_FILES_ARRAY[$i]}
        php -l -d display_errors=0 ${PHP_FILES_ARRAY[$i]} 1> /dev/null
    done

    PHP_FILES_FOR_CHECKS=$(printf '%s ' "${PHP_FILES_ARRAY[@]}")

    echo "Fix code style"
    if [ -f "platform/easy-coding-standard.php" ];
    then
        php dev-ops/analyze/vendor/bin/ecs check --fix --config platform/easy-coding-standard.php --no-progress-bar --no-error-table ${PHP_FILES_FOR_CHECKS}
    else
        php dev-ops/analyze/vendor/bin/ecs check --fix --config platform/easy-coding-standard.yml --no-progress-bar --no-error-table ${PHP_FILES_FOR_CHECKS}
    fi;

    if [ -z "$(docker compose ps -q app_server)" ]
    then
        php psh.phar static-analyze
    else
        docker compose exec -u $(id -u) -T -w /app app_server php psh.phar static-analyze
    fi

    cd ${PLATFORM_ROOT}
fi

if [[ -n "$SCSS_ADMIN_FILES" ]]
then
    if [[ -x ${PLATFORM_ROOT}/src/Administration/Resources/app/administration/node_modules/.bin/stylelint ]]
    then
        ${PLATFORM_ROOT}/src/Administration/Resources/app/administration/node_modules/.bin/stylelint ${SCSS_ADMIN_FILES} --syntax scss
    else
        echo "Skipped Stylelint checks on administration, because it's not installed."
    fi
fi

if [[ -n "$JS_ADMIN_FILES" ]]
then
    if [[ -x ${PLATFORM_ROOT}/src/Administration/Resources/app/administration/node_modules/.bin/eslint ]]
    then
        ${PLATFORM_ROOT}/src/Administration/Resources/app/administration/node_modules/.bin/eslint --config src/Administration/Resources/app/administration/.eslintrc.js --ext .js,.vue --fix ${JS_ADMIN_FILES}
    else
        echo "Skipped ESLint checks on administration, because it's not installed."
    fi
fi

if [[ -n "$JS_E2E_FILES" ]]
then
    if [[ -x ${PLATFORM_ROOT}/src/Administration/Resources/app/administration/test/e2e/node_modules/.bin/eslint ]]
    then
        ${PLATFORM_ROOT}/src/Administration/Resources/app/administration/test/e2e/node_modules/.bin/eslint --config src/Administration/Resources/app/administration/test/e2e/.eslintrc.js --ext .js,.vue --fix ${JS_E2E_FILES}
    else
        echo "Skipped ESLint checks on E2E, because it's not installed."
    fi
fi

if [[ -n "$JS_STOREFRONT_FILES" ]]
then
    if [[ -x ${PLATFORM_ROOT}/src/Storefront/Resources/app/storefront/node_modules/.bin/eslint ]]
    then
        ${PLATFORM_ROOT}/src/Storefront/Resources/app/storefront/node_modules/.bin/eslint --config src/Storefront/Resources/app/storefront/.eslintrc.js --ext .js,.vue --fix ${JS_STOREFRONT_FILES}
    else
        echo "Skipped ESLint checks on Storefront, because it's not installed."
    fi
fi

git add ${SCSS_ADMIN_FILES} ${JS_ADMIN_FILES} ${JS_E2E_FILES} ${JS_STOREFRONT_FILES} ${PHP_FILES}
